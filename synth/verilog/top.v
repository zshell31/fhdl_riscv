/* Automatically generated by Ferrum HDL. */

// src/lib.rs: 18
module top
(
    // Inputs
    input wire [31:0] instr,
    // Outputs
    output wire [6:0] _decoded$f7,
    output wire [4:0] _decoded$rs2,
    output wire [4:0] _decoded$rs1,
    output wire [2:0] _decoded$f3,
    output wire [4:0] _decoded$rd,
    output wire [6:0] _decoded$op_code,
    output wire [31:0] imm_i,
    output wire [31:0] imm_b,
    output wire [31:0] imm_u
);

    assign _decoded$f7 = instr[31:25];

    assign _decoded$rs2 = instr[24:20];

    assign _decoded$rs1 = instr[19:15];

    assign _decoded$f3 = instr[14:12];

    assign _decoded$rd = instr[11:7];

    assign _decoded$op_code = instr[6:0];

    wire [11:0] slice;
    assign slice = instr[31:20];

    assign imm_i = { { 20{ slice[11] } }, slice };

    wire bit;
    assign bit = instr[31];

    wire bit_1;
    assign bit_1 = instr[7];

    wire [5:0] slice_1;
    assign slice_1 = instr[30:25];

    wire [3:0] slice_2;
    assign slice_2 = instr[11:8];

    wire [11:0] bitvec;
    assign bitvec = {
        bit,
        bit_1,
        slice_1,
        slice_2
    };

    assign imm_b = { { 20{ bitvec[11] } }, bitvec };

    wire [19:0] slice_3;
    assign slice_3 = instr[31:12];

    wire [11:0] _$1;
    assign _$1 = 0;

    assign imm_u = {
        slice_3,
        _$1
    };

endmodule

